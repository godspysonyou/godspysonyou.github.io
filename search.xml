<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F02%2FUntitled%2F</url>
    <content type="text"><![CDATA[1 数据结构和算法1.1 将数据分解为单独的变量1.1.1 问题我们有一个包含N个元素的元组或序列，现在想将它分解为N个单独的变量。 1.1.2 解决方案任何序列（或可迭代的对象）都可以通过一个简单的赋值操作来分解为单独的变量。 唯一的要求是变量的总数和结构要与序列相吻合。 123p = (4,5)x, y = px 4 1y 5 12data = ['ACME', 50, 91.1, (2012, 12, 21)]name, shares, price, date = data 1name &apos;ACME&apos; 1date (2012, 12, 21) 1.1.3 讨论实际上不仅仅只是元组或列表，只要对象恰好是可迭代的，那么就可以执行分解操作，这包括字符串，文件，迭代器以及生成器。 123s = 'Hello'a, b, c, d, e = sa &apos;H&apos; 当做分解操作时，有时候可能想丢弃某些特定的值。Python并没有提供特殊的语法来实现这一点，但是通常可以选一个用不到的变量名，以此来作为要丢弃的值的名称。 123data = ['ACME', 50, 91.1, (2012,12,21)]_, shares, price, _ = datashares 50 1_ 50 1price 91.1 1_ 91.1 1# 这么神奇，_会随着变量选择二改变 1_ 91.1 1shares 50 1_ 50 要确保选择的变量名没有在其他地方用到过。 1.2 从任意长度的可迭代对象中分解元素1.2.1 问题需要从某个可迭代对象中分解出N个元素，但是这个可迭代对象的长度可能超过N，这会导致出现“分解的值过多（too many values to unpack）”的异常 1.2.2 解决方案Python的”*表达式“可以用来解决这个问题。例如，假设开设了一门课程，并决定在期末的作业成绩中去掉第一个和最后一个，只对中间的成绩做平均分。 123def drop_first_last(grades): first, *middle, last = grades return avg(middle) 12345678910111213141516171819202122232425262728import heapqclass PriorityQueue: def __init__(self): self._queue = [] self._index = 0 def push(self, item, priority): # 会以元组的第一个排序 heapq.heappush(self._queue, (-priority, self._index, item)) self._index += 1 def pop(self): return heapq.heappop(self._queue)[-1] class Item: def __init__(self, name): self.name = name def __repr__(self): return 'Item(&#123;!r&#125;)'.format(self.name) q = PriorityQueue()q.push(Item('foo'), 1)q.push(Item('bar'), 5)q.push(Item('spam'), 4)q.push(Item('grok'), 1)q.pop() Item(&apos;bar&apos;) 1q.pop() Item(&apos;spam&apos;) 1q.pop() Item(&apos;foo&apos;) 1q.pop() Item(&apos;grok&apos;) 1a = slice(5,50,2) 1a.start 5 1a.stop 50 1a.step 2 12s = 'HelloWorld'a.indices(len(s)) (5, 10, 2) 12for i in range(*a.indices(len(s))): print(s[i]) W r d 1.12 找出序列中出现次数最多的元素1.12.1 问题12 1234import numpy as nps = np.array([[1,2,6,4,5], [1,6,7,8,5], [9,4,3,3,7]]) 12t =np.max(s, axis=0)t array([9, 6, 7, 8, 7]) 12p = np.max(s, axis=1)p array([6, 8, 9]) 1s - t array([[-8, -4, -1, -4, -2], [-8, 0, 0, 0, -2], [ 0, -2, -4, -5, 0]]) 1s - p --------------------------------------------------------------------------- ValueError Traceback (most recent call last) &lt;ipython-input-62-48691d47ae22&gt; in &lt;module&gt;() ----&gt; 1 s - p ValueError: operands could not be broadcast together with shapes (3,5) (3,) 1np.random.randn(2, 3) array([[ 1.17045346, -0.43149659, -0.56057292], [ 0.21335407, 2.17671105, 0.46763049]]) 1np.random.rand(10) array([0.29312504, 0.81631479, 0.82780838, 0.381927 , 0.25193432, 0.49569331, 0.64500291, 0.69289742, 0.87186535, 0.30857921]) 1np.random.rand(10) &gt; 0.5 array([ True, True, True, True, True, True, False, False, False, True]) 12]]></content>
  </entry>
  <entry>
    <title><![CDATA[K-Nearest Neighbors]]></title>
    <url>%2F2018%2F05%2F02%2FpostName%2F</url>
    <content type="text"></content>
      <categories>
        <category>machine learning</category>
      </categories>
      <tags>
        <tag>machine learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F02%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
